name: DEV | Build and Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - dev

env:
    PRIVATE_SSH_KEY: ${{ secrets.PRIVATE_SSH_KEY }}
    ENV_FILE: ${{ secrets.DEV_ENV_FILE }}
    SA_FILE: ${{ secrets.SA_FILE }}
    ENVIRONMENT: dev
    BACKEND_PORT: 5010
    FRONTEND_PORT: 3010

jobs:

  deploy:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up SSH key
      uses: webfactory/ssh-agent@v0.5.0
      with:
        ssh-private-key: ${{ secrets.PRIVATE_SSH_KEY }}

    - name: Download artifact
      id: download-artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: base-image.yml
        branch: dev
        name: base-image
        if_no_artifact_found: fail

    - name: Retrieve SSH host key
      run: |
        echo -e "Host *\n\tStrictHostKeyChecking no\n\tServerAliveCountMax 360\n\tServerAliveInterval 10\n\n" > ~/.ssh/config
        ssh-keyscan ${{ secrets.DEV_HOST_IP }} >> ~/.ssh/known_hosts
        rsync -a -v --progress --delete --quiet  base-image.tar app@${{ secrets.DEV_HOST_IP }}:~

    - name: Execute commands on server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEV_HOST_IP }}
        key: ${{ secrets.PRIVATE_SSH_KEY }}
        username: app
        port: 22
        script: |
          echo "ENVVRRMMNNTT = ${{ env.ENVIRONMENT }}"
          rm -rf cloudobs-infrastructure cloudobs
          git clone https://github.com/ALLATRA-IT/cloudobs-infrastructure.git
          git clone https://github.com/ALLATRA-IT/cloudobs.git
          echo "${{ env.ENV_FILE }}" > .env
          echo "${{ env.SA_FILE }}" > sa.json
          printf "ENVIRONMENT=${{ env.ENVIRONMENT }}\nBACKEND_PORT=${{ env.BACKEND_PORT }}\nFRONTEND_PORT=${{ env.FRONTEND_PORT }}" > .compose.env
          cp .env sa.json .compose.env dev/
          cp cloudobs-infrastructure/shared/files/docker-compose.yml dev/
          cd cloudobs
          git checkout ${{ env.ENVIRONMENT }}
          docker build -t ${{ github.event.repository.name }}-${{ env.ENVIRONMENT }} .
          cd ~/${{ env.ENVIRONMENT }}
          docker image rm base-image
          docker image rm -f $(docker images --filter=reference="${{ github.event.repository.name }}-${{ env.ENVIRONMENT }}" -q) || true
          docker load --input base-image.tar
          docker images
          docker load --input ~/${{ env.ENVIRONMENT }}/${{ github.event.repository.name }}.tar && mkdir -p ~/${{ env.ENVIRONMENT }}
          cd ~/${{ env.ENVIRONMENT }} && docker compose down && docker compose --env-file .compose.env up -d && sleep 10 && docker compose ps backend
