name: DEV | Build and Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - dev

env:
    HOST: app@${{ secrets.DEV_HOST_IP }}
    PRIVATE_SSH_KEY: ${{ secrets.PRIVATE_SSH_KEY }}
    ENV_FILE: ${{ secrets.DEV_ENV_FILE }}
    SA_FILE: ${{ secrets.SA_FILE }}
    ENVIRONMENT: dev
    BACKEND_PORT: 5010
    FRONTEND_PORT: 3010

jobs:

  deploy:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up SSH key
      uses: webfactory/ssh-agent@v0.5.0
      with:
        ssh-private-key: ${{ secrets.PRIVATE_SSH_KEY }}

    - name: Retrieve SSH host key
      run: |
        ssh-keyscan ${{ secrets.DEV_HOST_IP }} >> ~/.ssh/known_hosts
        ssh-add -L

    - name: SSH into remote server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.DEV_HOST_IP }}
        key: ${{ secrets.PRIVATE_SSH_KEY }}
        username: app
        port: 22
        script: |
          echo "ENVVRRMMNNTT = ${ENVIRONMENT}"
          git clone git@github.com:ALLATRA-IT/cloudobs.git --depth 1
          git clone ${{ secrets.GH_PERSONAL_TOKEN }}@github.com:ALLATRA-IT/cloudobs-infrastructure.git --depth 1
          echo "${ENV_FILE}" > .env
          echo "${SA_FILE}" > sa.json
          printf "ENVIRONMENT=${ENVIRONMENT}\nBACKEND_PORT=${BACKEND_PORT}\nFRONTEND_PORT=${FRONTEND_PORT}" > .compose.env
          cp .env sa.json .compose.env ~/dev/
          cp cloudobs-infrastructure/docker-compose.yml ~/dev/
          cd cloudobs
          git checkout ${{ env.ENVIRONMENT }}
          docker build -t base-image -f ./base-image.dockerfile .
          docker build -t ${{ github.event.repository.name }}-${ENVIRONMENT} . --no-cache
          docker images
          cd ~/${ENVIRONMENT}
          docker image rm -f $(docker images --filter=reference="${{ github.event.repository.name }}-${ENVIRONMENT}" -q) || true
          docker load --input ~/${ENVIRONMENT}/${{ github.event.repository.name }}.tar && mkdir -p ~/${ENVIRONMENT}
          cd ~/${ENVIRONMENT} && docker compose down && docker compose --env-file .compose.env up -d && sleep 10 && docker compose ps
